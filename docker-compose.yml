version: '3.8'

services:
  db1:
    image: mysql:latest
    container_name: mysql_container_1
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - db_data_1:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db2:
    image: mysql:latest
    container_name: mysql_container_2
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    volumes:
      - db_data_2:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db3:
    image: mysql:latest
    container_name: mysql_container_3
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3308:3306"
    volumes:
      - db_data_3:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web1:
    build: .
    container_name: flask_app_1
    environment:
      FLASK_APP: app.py
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db1
    ports:
      - "5001:5000"
    networks:
      - app_network
    depends_on:
      db1:
        condition: service_healthy

  web2:
    build: .
    container_name: flask_app_2
    environment:
      FLASK_APP: app.py
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db2
    ports:
      - "5002:5000"
    networks:
      - app_network
    depends_on:
      db2:
        condition: service_healthy

  web3:
    build: .
    container_name: flask_app_3
    environment:
      FLASK_APP: app.py
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db3
    ports:
      - "5003:5000"
    networks:
      - app_network
    depends_on:
      db3:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network
    depends_on:
      - web1
      - web2
      - web3

  ab:
    build:
      context: .
      dockerfile: DockerFile.ab
    networks:
      - app_network
    depends_on:
      - nginx
    entrypoint: ["/bin/sh", "-c", "while true; do sleep 1000; done"]



networks:
  app_network:
    driver: bridge

volumes:
  db_data_1:
  db_data_2:
  db_data_3: